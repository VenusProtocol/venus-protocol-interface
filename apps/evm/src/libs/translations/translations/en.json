{
  "account": {
    "marketBreakdown": {
      "tables": {
        "borrowTableTitle": "Borrowed assets",
        "supplyTableTitle": "Supplied assets",
        "tabletBorrowTabTitle": "Borrowed",
        "tabletSupplyTabTitle": "Supplied",
        "tabletTitle": "Assets"
      }
    },
    "poolsBreakdown": {
      "poolTagTooltip": "Borrow limit used: {{borrowLimitUsedPercentage}}",
      "title": "Pools"
    },
    "summary": {
      "cellGroup": {
        "dailyEarnings": "Daily Earnings",
        "netApy": "Net APY",
        "netApyTooltip": "Percentage of your total supply balance received as yearly interests",
        "netApyWithVaultStakeTooltip": "Percentage of your total supply and vault stake received as yearly interests",
        "totalBorrow": "Total Borrow",
        "totalSupply": "Total Supply",
        "totalVaultStake": "Total Vault Stake"
      },
      "title": "Summary"
    },
    "vaultsBreakdown": {
      "table": {
        "column": {
          "apr": "APR",
          "asset": "Asset",
          "stake": "Stake"
        },
        "title": "Staked"
      },
      "title": "Vaults"
    }
  },
  "accountData": {
    "borrowBalance": "Borrow balance ({{tokenSymbol}})",
    "borrowLimit": "Borrow limit",
    "borrowLimitUsed": "Borrow limit used",
    "dailyEarnings": "Daily earnings",
    "supplyBalance": "Supply balance ({{tokenSymbol}})",
    "totalApy": {
      "borrowApyTooltip": "Borrow APY - Distribution APYs",
      "label": "Total APY",
      "supplyApyTooltip": "Supply APY + Distribution APYs"
    }
  },
  "accountHealth": {
    "accessibilityLabel": "Representation of the current state of your account",
    "borrowLimitTooltip": "Current borrow balance:<LineBreak/>{{borrowBalance}} ({{borrowLimitUsedPercentage}} of your borrow limit)",
    "borrowLimitUsed": "Borrow limit used:",
    "currentBorrowBalance": "Current:",
    "limit": "Limit:",
    "max": "Max:",
    "safeBorrowLimitTooltip": "Safe borrow limit:<LineBreak/>{{safeBorrowLimit}} ({{safeBorrowLimitPercentage}}% of your borrow limit)"
  },
  "accountPlaceholder": {
    "assetsWillAppearHere": "Supplied and borrowed assets will appear here",
    "letsGetStarted": "Letâ€™s get started"
  },
  "announcements": {
    "bethUpdate": {
      "description": "Binance paused BETH withdrawals on 2023-04-26. We recommend users reduce their exposure to BETH on Venus. Borrowing has been paused. Convert BETH to WBETH on-chain at a 1:1 ratio <Link>here</Link>."
    },
    "sxpDisabling": {
      "description": "Following recommendation from Gauntlet, borrow and supply for SXP has been paused given concerns around SXP migrating to a new chain and expected decline in SXP liquidity."
    },
    "trxMigration": {
      "description": "Venus supports the new TRX token in a new market. Borrowing and supplying has been paused for the old TRX token. For more information see the <Link>official announcement by Binance</Link>."
    },
    "tusdMigration": {
      "description": "Venus supports the new TUSD token in a new market. Borrowing and supplying has been paused for the old TUSD token. For more information see the <Link>official announcement by Binance</Link>."
    }
  },
  "approveDelegateSteps": {
    "approveDelegateButton": {
      "text": "Approve delegate contract",
      "tooltip": "We require approving the delegate contract to perform this operation on your behalf."
    },
    "step1": "Step 1"
  },
  "approveTokenSteps": {
    "approveTokenButton": {
      "text": "Approve {{tokenSymbol}}",
      "tooltip": "We require spending approval for any token you wish to use with the Venus protocol."
    },
    "step1": "Step 1",
    "step2": "Step 2"
  },
  "appVersionChecker": {
    "newVersionMessage": "A new version of Venus is available. Reload the page to use it now."
  },
  "apyChart": {
    "tooltipItemLabels": {
      "borrowApy": "Borrow APY",
      "date": "Date",
      "supplyApy": "Supply APY",
      "totalBorrow": "Total borrow",
      "totalSupply": "Total supply"
    }
  },
  "asset": {
    "marketInfo": {
      "title": "Market info"
    }
  },
  "assetAccessor": {
    "disabledActionNotice": {
      "borrow": "Borrowing has been disabled for this token",
      "repay": "Repaying has been disabled for this token",
      "supply": "Supplying has been disabled for this token",
      "withdraw": "Withdrawing has been disabled for this token"
    }
  },
  "assetInfo": {
    "borrowApy": "Borrow APY",
    "distributionApy": "Distribution APY ({{tokenSymbol}})",
    "distributionTooltip": "Distribution rewards are initiated and implemented by the decentralized Venus community. The Venus protocol does not guarantee them and accepts no liability.",
    "primeApy": "Prime APY ({{tokenSymbol}})",
    "supplyApy": "Supply APY"
  },
  "assetWarning": {
    "borrowDescription": "You may borrow {{tokenSymbol}} according to your collateralized supply in the {{poolName}} pool. <Button>Show all tokens</Button>",
    "modalTitle": "{{ poolName }} pool tokens",
    "supplyDescription": "Supplying {{tokenSymbol}} to the {{poolName}} pool will enable you to borrow tokens from this pool exclusively. <Button>Show all tokens</Button>"
  },
  "authModal": {
    "accountDetails": {
      "logOutButtonLabel": "Log out"
    },
    "title": {
      "connectWallet": "Connect a wallet",
      "yourAccount": "Your account"
    },
    "walletList": {
      "comingSoon": "Coming soon..."
    }
  },
  "breadcrumbs": {
    "account": "Account",
    "bridge": "Bridge",
    "convertVrt": "Convert VRT",
    "corePool": "Core pool",
    "dashboard": "Dashboard",
    "governance": "Governance",
    "history": "History",
    "isolatedPools": "Isolated pools",
    "leaderboard": "Leaderboard",
    "markets": "Markets",
    "primeCalculator": "Prime calculator",
    "proposal": "Proposal #{{proposalId}}",
    "stakedEthPool": "Staked ETH pool",
    "swap": "Swap",
    "vai": "VAI",
    "vaults": "Vaults",
    "xvs": "XVS"
  },
  "bridgePage": {
    "amountInput": {
      "label": "Amount",
      "maxButtonLabel": "MAX"
    },
    "bridgeGasFee": {
      "label": "Bridge gas fee",
      "tooltip": "Used to cover the gas cost for sending your transfer on the destination chain"
    },
    "connectWalletButton": {
      "label": "Connect wallet"
    },
    "errors": {
      "dailyTransactionLimitExceeded": {
        "message": "You cannot bridge more than {{readableAmountTokens}} ({{readableAmountUsd}}) on the destination chain due to the 24-hour limit. This limit will be reset on {{ date, dd MMM yyyy h:mm a }}",
        "submitButton": "Amount entered higher than the daily limit"
      },
      "doesNotHaveEnoughNativeFunds": "Insufficient {{tokenSymbol}} balance",
      "doesNotHaveEnoughXvs": "Insufficient {{tokenSymbol}} balance",
      "mintCapReached": {
        "message": "You cannot bridge more than {{readableAmountTokens}} due to the bridge mint cap",
        "submitButton": "Bridge mint cap reached"
      },
      "singleTransactionLimitExceeded": {
        "message": "You cannot bridge more than {{readableAmountTokens}} ({{readableAmountUsd}}) on the destination chain in a single transaction",
        "submitButton": "Amount entered higher than the limit"
      }
    },
    "footer": {
      "bridgeDocLink": "How to bridge",
      "poweredBy": "Powered by"
    },
    "fromChainSelect": {
      "label": "From"
    },
    "submitButton": {
      "label": {
        "enterValidAmount": "Enter valid amount",
        "submit": "Confirm"
      }
    },
    "toChainSelect": {
      "label": "To"
    },
    "walletBalance": {
      "label": "Wallet balance"
    }
  },
  "chainExplorerLink": {
    "content": "View on {{domainName}}"
  },
  "chip": {
    "proposalType": {
      "critical": "Critical",
      "fastTrack": "Fast track"
    }
  },
  "claimReward": {
    "modal": {
      "claimButton": {
        "disabledLabel": "Select groups to collect reward from",
        "enabledLabel": "Claim"
      },
      "selectAll": "Select all",
      "title": "Claim reward ({{chainName}})"
    },
    "openModalButton": {
      "label": "Claim {{rewardAmount}}"
    }
  },
  "connectButton": {
    "title": "Connect wallet"
  },
  "connectWallet": {
    "connectButton": "Connect wallet"
  },
  "convertVrt": {
    "connectWalletToWithdrawXvs": "Please connect your wallet to withdraw XVS",
    "convert": "Convert",
    "infoConversionCompleted": "Completed @ 16:00 on 3.31.23",
    "internalErrorXvsToVrtConversionRatioUndefined": "xvsToVrtConversionRatio undefined",
    "withdraw": "Withdraw",
    "withdrawableAmount": "Withdrawable amount",
    "withdrawXvs": "Withdraw XVS"
  },
  "dashboard": {
    "allTag": "All",
    "connectWalletBanner": {
      "illustration": {
        "alt": "Illustration of a wallet"
      }
    },
    "pausedAssetsToggle": {
      "label": "Paused assets"
    },
    "primePromotionalBanner": {
      "buttonLabel": {
        "primeCalculator": "Calculate your Prime rewards",
        "primeDoc": "Learn more"
      },
      "description": "Venus Prime rewards dedicated users for their lending and borrowing activities.",
      "illustration": {
        "alt": "Prime promotional banner"
      },
      "title": "Let's grow together with <Prime>Venus Prime</Prime>"
    },
    "searchInput": {
      "placeholder": "Search asset"
    }
  },
  "errors": {
    "couldNotRetrieveSigner": "Signer could not be retrieved, please make sure your wallet is unlocked then reload the page",
    "couldNotSwitchChain": "Could not switch chain, please make sure your wallet is unlocked then reload the page",
    "missingAbstainDescription": "Proposal needs an 'abstain' votes description",
    "missingAgainstDescription": "Proposal needs an 'against' votes description",
    "missingDescription": "There is no proposal description in the file",
    "missingForDescription": "Proposal needs a 'for' votes description",
    "missingParamForSignature": "There is no corresponding param for the function",
    "missingTargetForSignature": "There is no corresponding target for the function",
    "missingTitle": "Proposal needs to have a title",
    "noMetaKey": "No metadata information is present in the file",
    "noParamsKey": "File does not contain the list of params",
    "noSignaturesKey": "There are no call signatures in the file",
    "noTargetsKey": "File does not contain the list of targets",
    "noTypeKey": "File does not indicate the proposal's type",
    "somethingWentWrong": "Something went wrong",
    "somethingWentWrongRetrievingTransactions": "Something went wrong retrieving transactions",
    "somethingWentWrongRetrievingVoterAccounts": "Something went wrong retrieving voter accounts",
    "somethingWentWrongRetrievingVoterDetails": "Something went wrong retrieving voter details",
    "somethingWentWrongRetrievingVoterHistory": "Something went wrong retrieving voter history",
    "undefinedAccountErrorMessage": "Account undefined",
    "validationError": "Validation failed for imported proposal:",
    "walletNotConnected": "Wallet not connected"
  },
  "errorState": {
    "defaultMessage": "An error occurred"
  },
  "footer": {
    "links": {
      "documentation": "Documentation"
    }
  },
  "history": {
    "all": "All",
    "approval": "Approval",
    "borrow": "Borrow",
    "columns": {
      "amount": "Amount",
      "block": "Block",
      "created": "Created",
      "from": "From",
      "hash": "Hash",
      "to": "To",
      "type": "Type"
    },
    "createdAt": "{{ date, distanceToNow }} ago",
    "deposit": "Deposit",
    "liquidateBorrow": "Liquidate Borrow",
    "mint": "Mint",
    "mintVAI": "Mint VAI",
    "myTransactions": "My Transactions",
    "proposalCanceled": "Proposal Canceled",
    "proposalCreated": "Proposal Created",
    "proposalExecuted": "Proposal Executed",
    "proposalQueued": "Proposal Queued",
    "redeem": "Redeem",
    "repayBorrow": "Repay Borrow",
    "repayVAI": "Repay VAI",
    "reservesAdded": "Reserves Added",
    "reservesReduced": "Reserves Reduced",
    "selectLabel": "Type",
    "transfer": "Transfer",
    "voteCast": "Vote Cast",
    "withdraw": "Withdraw"
  },
  "interactive": {
    "copy": {
      "walletAddress": "Wallet address",
      "xvsAddress": "XVS address"
    },
    "copyToClipboard": "{{name}} copied to clipboard"
  },
  "interestRateChart": {
    "currentUtilizationRateLabelValue": "Current ({{percentage}})",
    "tooltipItemLabels": {
      "borrowApy": "Borrow APY",
      "supplyApy": "Supply APY",
      "utilizationRate": "Utilization rate"
    }
  },
  "layout": {
    "chainSelect": {
      "label": "Select network"
    },
    "claimRewardModal": {
      "primeGroup": {
        "disabledContractWarningMessage": "The Prime contract is currently paused. Interests from Prime are still accruing but can't be claimed until the contract is unpaused.",
        "name": "Prime"
      },
      "vaultGroup": {
        "disabledContractWarningMessage": "This vault is currently paused. Interest rates are still accruing but can't be claimed until the vault is unpaused.",
        "name": "{{stakedTokenSymbol}} vault"
      },
      "vestingVaultGroup": {
        "name": "{{stakedTokenSymbol}} vesting vault"
      }
    },
    "header": {
      "isolated": "Isolated",
      "liquidity": "Liquidity",
      "price": "Price",
      "reserves": "Reserves",
      "utilizationRate": "Utilization rate"
    },
    "menu": {
      "navLink": {
        "new": "NEW"
      },
      "venusLogoAlt": "Venus logo"
    },
    "menuItems": {
      "account": "Account",
      "bridge": "Bridge",
      "corePool": "Core pool",
      "dashboard": "Dashboard",
      "governance": "Governance",
      "history": "History",
      "isolatedPools": "Isolated pools",
      "stakedEthPool": "Staked ETH pool",
      "swap": "Swap",
      "vai": "VAI",
      "vaults": "Vaults",
      "xvs": "XVS"
    }
  },
  "legacyPool": {
    "description": "Venusâ€™ primary pool is composed of large-cap tokens that meet minimum liquidity requirements.",
    "name": "Venus Core Pool"
  },
  "markdownEditor": {
    "markdownTabLabel": "Write",
    "placeholder": "Nothing to preview",
    "previewTabLabel": "Preview"
  },
  "market": {
    "borrowButtonLabel": "Borrow",
    "borrowInfo": {
      "stats": {
        "apy": "APY",
        "totalBorrow": "Total borrow"
      },
      "title": "Borrow info"
    },
    "interestRateModel": {
      "title": "Interest Rate Model"
    },
    "legends": {
      "borrowApy": "Borrow APY",
      "supplyApy": "Supply APY",
      "utilizationRate": "Utilization rate"
    },
    "marketInfo": {
      "stats": {
        "borrowCapLabel": "Borrow cap",
        "borrowerCountLabel": "# of borrowers",
        "collateralFactorLabel": "Collateral factor",
        "dailyBorrowingInterestsLabel": "Daily borrowing interests",
        "dailyDistribution": "Daily {{tokenSymbol}} distributed",
        "dailySupplyingInterestsLabel": "Daily supplying interests",
        "exchangeRateLabel": "Exchange rate",
        "exchangeRateValue": "1 {{tokenSymbol}}={{rate}} {{vTokenSymbol}}",
        "marketLiquidityLabel": "Market liquidity",
        "mintedTokensLabel": "{{vTokenSymbol}} minted",
        "priceLabel": "Price",
        "reserveFactorLabel": "Reserve factor",
        "reserveTokensLabel": "Reserves",
        "supplierCountLabel": "# of suppliers",
        "supplyCapLabel": "Supply cap",
        "unlimitedBorrowCap": "Uncapped",
        "unlimitedSupplyCap": "Uncapped"
      }
    },
    "supplyButtonLabel": "Supply",
    "supplyInfo": {
      "stats": {
        "apy": "APY",
        "distributionApy": "Distribution APY",
        "totalSupply": "Total supply"
      },
      "title": "Supply info"
    }
  },
  "markets": {
    "errors": {
      "accountError": "Account Required - Please connect your wallet.",
      "collateralDisableError": "Collateral Disable Error - There was a problem disabling {{assetName}} as a collateral. Please try again.",
      "collateralEnableError": "Collateral Enable Error - There was a problem enabling {{assetName}} as a collateral. Please try again.",
      "collateralRequired": "Collateral Required - Please repay all borrowed assets or set other assets as collateral."
    }
  },
  "marketTable": {
    "apy": {
      "primeBoost": {
        "tooltip": "Total APY after applying Prime boost. <Link>Calculate your Prime rewards</Link>"
      },
      "primeSimulationBoost": {
        "primeLogoAlt": "Prime logo",
        "tooltip": {
          "primeCalculator": "APY boosted by Prime based on the median user supply of {{supplyBalance}}, borrow of {{borrowBalance}} and vault stake of {{xvsStaked}}. <Link>Calculate your Prime rewards</Link>",
          "primeDoc": "APY boosted by Prime based on the median user supply of {{supplyBalance}}, borrow of {{borrowBalance}} and vault stake of {{xvsStaked}}. <Link>Learn more</Link>"
        }
      }
    },
    "assetColumn": {
      "pausedAssetTooltip": "Asset paused by Venus Governance. Borrowing and supplying have been disabled."
    },
    "columnKeys": {
      "asset": "Asset",
      "borrowApy": "APY <InfoIcon />",
      "borrowBalance": "Total borrow",
      "collateral": "Collateral",
      "labeledBorrowApy": "Borrow APY <InfoIcon />",
      "labeledSupplyApyLtv": "Supply APY <InfoIcon /> / LTV",
      "liquidity": "Liquidity",
      "pool": "Pool",
      "price": "Price",
      "supplyApyLtv": "APY <InfoIcon /> / LTV",
      "supplyBalance": "Total supply",
      "userBorrowBalance": "Balance",
      "userPercentOfLimit": "% of limit",
      "userSupplyBalance": "Balance",
      "userWalletBalance": "Wallet"
    },
    "columnSelectOptionLabel": {
      "asset": "Asset",
      "borrowApy": "Borrow APY",
      "borrowBalance": "Total borrow",
      "collateral": "Collateral",
      "labeledBorrowApy": "Borrow APY",
      "labeledSupplyApyLtv": "Supply APY / LTV",
      "liquidity": "Liquidity",
      "pool": "Pool",
      "price": "Price",
      "supplyApyLtv": "Supply APY / LTV",
      "supplyBalance": "Total supply",
      "userBorrowBalance": "Borrow balance",
      "userPercentOfLimit": "% of limit",
      "userSupplyBalance": "Supply balance",
      "userWalletBalance": "Wallet balance"
    },
    "columnTooltips": {
      "borrowApy": "A positive borrow APY means you'll pay interest and a negative one means you'll earn interest",
      "supplyApy": "A positive supply APY means you'll earn interest and a negative one means you'll pay interest"
    }
  },
  "myAccount": {
    "safeLimit": "Your safe limit:",
    "safeLimitTooltip": "{{safeBorrowLimitPercentage}} of your borrow limit. We consider borrowing above this threshold unsafe."
  },
  "operationForm": {
    "borrow": {
      "connectWalletMessage": "Please connect your wallet to borrow"
    },
    "borrowableAmount": "Borrowable Amount",
    "borrowTabTitle": "Borrow",
    "error": {
      "borrowCapReached": "The borrow cap of {{assetBorrowCap}} has been reached for this pool. You can not borrow from this market anymore until loans are repaid or its borrow cap is increased.",
      "higherThanAvailableLiquidity": "Insufficient asset liquidity",
      "higherThanBorrowableAmount": "Amount entered higher than borrowable amount",
      "higherThanBorrowCap": "You can not borrow more than {{userMaxBorrowAmount}} from this pool, as the borrow cap for this market is set at {{assetBorrowCap}} and {{assetBorrowBalance}} are currently being borrowed from it.",
      "higherThanRepayBalance": "Amount entered higher than repay balance",
      "higherThanSupplyCap": "You can not supply more than {{userMaxSupplyAmount}} to this pool, as the supply cap for this market is set at {{assetSupplyCap}} and {{assetSupplyBalance}} are currently being supplied to it.",
      "higherThanWalletBalance": "Insufficient {{tokenSymbol}} balance",
      "higherThanWalletSpendingLimit": "You entered an amount that exceeds your spending limit for this asset. Please revoke your spending limit then set a new one in order to proceed with this transaction.",
      "higherThanWithdrawableAmount": "Amount entered higher than withdrawable amount",
      "insufficientSwapLiquidity": "Insufficient liquidity in PancakeSwap for this swap",
      "noCollateral": "You need to supply tokens and enable them as collateral before you can borrow {{tokenSymbol}} from this pool",
      "priceImpactTooHigh": "Price impact too high",
      "supplyCapReached": "The supply cap of {{assetSupplyCap}} has been reached for this pool. You can not supply to this market anymore until withdraws are made or its supply cap is increased.",
      "unwrappingUnsupported": "Unwrapping unsupported",
      "wrappingUnsupported": "Wrapping unsupported"
    },
    "limitButtonLabel": "{{limitPercentage}}% LIMIT",
    "receiveNativeToken": {
      "label": "Receive {{tokenSymbol}}",
      "tooltip": "Unwrap borrowed {{wrappedNativeTokenSymbol}} to {{nativeTokenSymbol}}"
    },
    "repay": {
      "connectWalletMessage": "Please connect your wallet to repay",
      "fullRepaymentWarning": "The transaction value might be slightly higher than the current borrow amount to cover any newly-accumulated interests",
      "swappingWithHighPriceImpactWarning": "The price impact of this transaction is high, which might indicate an unfavorable swap. Make sure the exchange rate and the amount of tokens exchanged meet your expectations."
    },
    "repayableAmount": "Repayable amount",
    "repayTabTitle": "Repay",
    "rightMaxButtonLabel": "MAX",
    "submitButtonLabel": {
      "borrow": "Borrow",
      "enterValidAmount": "Enter valid amount",
      "repay": "Repay",
      "supply": "Supply",
      "withdraw": "Withdraw"
    },
    "suppliableAmount": "Suppliable amount",
    "supply": {
      "collateral": "Collateral",
      "connectWalletMessage": "Please connect your wallet to supply",
      "youCanWrapNative": "You can wrap {{nativeTokenSymbol}} into {{wrappedNativeTokenSymbol}} in <Link>Uniswap</Link>"
    },
    "supplyTabTitle": "Supply",
    "swapDetails": {
      "label": {
        "exchangeRate": "Exchange rate",
        "priceImpact": "Price impact",
        "repay": "You will repay",
        "slippageTolerance": "Slippage tolerance",
        "supply": "You will supply"
      },
      "tooltip": {
        "priceImpact": "Difference between the market price and estimated price due to trade size."
      },
      "value": {
        "estimatedAmount": "â‰ˆ {{ value }}",
        "exactAmount": "{{ value }}",
        "exchangeRate": "1 {{fromTokenSymbol}} â‰ˆ {{rate}} {{toTokenSymbol}}",
        "priceImpact": "{{ priceImpact }}"
      }
    },
    "swapSummary": {
      "repay": "You will repay {{toTokenAmount}} using {{fromTokenAmount}}",
      "supply": "You will supply {{toTokenAmount}} using {{fromTokenAmount}}"
    },
    "walletBalance": "Wallet balance",
    "warning": {
      "aboveSafeLimit": "You entered a high value. There is a risk of liquidation.",
      "swappingWithHighPriceImpactWarning": "The price impact of this transaction is high, which might indicate an unfavorable swap. Make sure the exchange rate and the amount of tokens exchanged meet your expectations."
    },
    "withdraw": {
      "connectWalletMessage": "Please connect your wallet to withdraw"
    },
    "withdrawableAmount": "Withdrawable amount",
    "withdrawTabTitle": "Withdraw"
  },
  "pagination": {
    "itemOf": "Item {{currentPageLastIndex}} out of {{itemsCount}}",
    "itemsOf": "Items {{firstItemNumber}} - {{currentPageLastIndex}} out of {{itemsCount}}"
  },
  "pool": {
    "poolWarning": "Supplying tokens to the {{poolName}} pool will increase your borrow limit for this pool only, effectively enabling you to borrow tokens from this pool only."
  },
  "pools": {
    "poolTable": {
      "columns": {
        "assets": "Assets",
        "liquidity": "Liquidity",
        "pool": "Pool",
        "totalBorrow": "Total borrow",
        "totalSupply": "Total supply"
      }
    }
  },
  "poolsStats": {
    "cell": {
      "assetsLabel": "Assets",
      "availableLiquidityLabel": "Available liquidity",
      "totalBorrowLabel": "Total borrow",
      "totalSupplyLabel": "Total supply",
      "treasuryLabel": "Treasury"
    }
  },
  "PrimeButton": {
    "primeLogoAlt": "Venus Prime logo"
  },
  "primeCalculator": {
    "borrowedTokens": {
      "infos": {
        "label": "Qualified borrowed {{tokenSymbol}}",
        "tooltip": "Borrow cap: {{borrowCapTokens}} ({{borrowCapUsd}})",
        "tooltip_empty": "Borrow cap: -"
      },
      "textField": {
        "label": "Borrowed {{tokenSymbol}}"
      }
    },
    "rewardDetails": {
      "fromBorrowedTokens": "From borrowed {{tokenSymbol}}",
      "fromSuppliedTokens": "From supplied {{tokenSymbol}}",
      "primeBorrowApy": {
        "title": "Prime borrow APY",
        "tooltip": "Prime boost to be added to the market borrow APY. <Link>Learn more</Link>"
      },
      "primeSupplyApy": {
        "title": "Prime supply APY",
        "tooltip": "Prime boost to be added to the market supply APY. <Link>Learn more</Link>"
      },
      "title": "Reward details",
      "totalDailyRewards": {
        "title": "Total daily rewards",
        "tooltip": "Amount of all rewards distributed for Prime users in a day"
      },
      "yourDailyRewards": "Your daily rewards"
    },
    "stakedTokens": {
      "infos": {
        "error": "To be eligible for Prime rewards, at least {{minimumXvsStaked}} XVS tokens must be staked.",
        "label": "Qualified staked XVS",
        "tooltip": "Up to {{maximumXvsStaked}} will be taken into account for your Prime rewards"
      },
      "textField": {
        "label": "Staked XVS"
      }
    },
    "suppliedTokens": {
      "infos": {
        "label": "Qualified supplied {{tokenSymbol}}",
        "tooltip": "Supply cap: {{supplyCapTokens}} ({{supplyCapUsd}})",
        "tooltip_empty": "Supply cap: -"
      },
      "textField": {
        "label": "Supplied {{tokenSymbol}}"
      }
    },
    "tokenSelect": {
      "label": "Token"
    },
    "topMessage": "You can use the Prime calculator to estimate the rewards you'd receive from holding a Prime token based on your positions. <Link>Learn more</Link>"
  },
  "primeStatusBanner": {
    "becomePrimeTitle": "You can now become a Prime user",
    "claimButtonLabel": "Claim Prime token",
    "description": {
      "primeCalculator": "Stake <WhiteText>{{stakeDelta}}</WhiteText> more then wait {{claimWaitingPeriod}} to claim your Prime token and boost your earnings. <Link>Calculate your Prime rewards</Link>",
      "primeDoc": "Stake <WhiteText>{{stakeDelta}}</WhiteText> more then wait {{claimWaitingPeriod}} to claim your Prime token and boost your earnings. <Link>Learn more</Link>"
    },
    "noPrimeTokenWarning": {
      "text": "All Prime tokens have been claimed",
      "tooltip": "All {{primeTokenLimit}} Prime tokens are currently claimed. Some may become available if owners no longer meet the eligibility criteria or if we add more."
    },
    "progressBar": {
      "ariaLabel": "Your current Prime progression",
      "label": "Staked: <WhiteText>{{userStakedXvsTokens}} / {{minXvsToStakeForPrimeTokens}}</WhiteText>"
    },
    "promotionalTitle": "Boost your earnings by up to <GreenText>{{percentage}}</GreenText>",
    "stakeButtonLabel": "Stake XVS",
    "tokensLeft": "<WhiteText>{{tokensLeft}}</WhiteText> prime tokens left",
    "waitForPrimeTitle": "{{claimWaitingPeriod}} until you can claim Prime rewards"
  },
  "proposalList": {
    "selectOptions": {
      "all": {
        "label": "All"
      }
    }
  },
  "proposalState": {
    "active": "Active",
    "canceled": "Canceled",
    "created": "Created",
    "defeated": "Defeated",
    "executed": "Executed",
    "expired": "Expired",
    "pending": "Pending",
    "queued": "Queued",
    "succeeded": "Succeeded"
  },
  "select": {
    "defaultLabel": "Select option"
  },
  "selectTokenTextField": {
    "searchInput": {
      "placeholder": "Search asset"
    }
  },
  "spendingLimit": {
    "label": "Spending limit",
    "labelTooltip": "This is your current spending cap for this asset. To spend more, revoke the cap and set a new one.",
    "revokeButtonTooltip": "Revoke spending limit"
  },
  "spinner": {
    "altText": "Spinning animation"
  },
  "stakeModal": {
    "availableTokensLabel": "Available {{tokenSymbol}}",
    "connectWalletMessage": "Please connect your wallet to stake {{tokenSymbol}}",
    "submitButtonDisabledLabel": "Enter a valid amount to stake",
    "submitButtonLabel": "Stake",
    "title": "Stake {{tokenSymbol}}"
  },
  "swap": {
    "errors": {
      "amountAboveWalletSpendingLimit": "You entered an amount that exceeds your spending limit for this asset. Please revoke your spending limit then set a new one in order to proceed with this transaction.",
      "incorrectSwapInput": "Incorrect input provided for swap"
    },
    "swapDetails": {
      "label": {
        "exchangeRate": "Exchange rate",
        "maximumSold": "Maximum sold",
        "minimumReceived": "Minimum received",
        "priceImpact": "Price impact",
        "slippageTolerance": "Slippage tolerance"
      },
      "tooltip": {
        "priceImpact": "Difference between the market price and estimated price due to trade size."
      },
      "value": {
        "exactAmount": "{{ value }}",
        "exchangeRate": "1 {{fromTokenSymbol}} â‰ˆ {{rate}} {{toTokenSymbol}}",
        "priceImpact": "{{ priceImpact }}"
      }
    },
    "warning": {
      "swappingWithHighPriceImpactWarning": "The price impact of this transaction is high, which might indicate an unfavorable swap. Make sure the exchange rate and the amount of tokens exchanged meet your expectations."
    }
  },
  "swapPage": {
    "connectWalletToSwap": "Please connect your wallet to swap tokens",
    "fromTokenAmountField": {
      "label": "From",
      "max": "Max"
    },
    "submitButton": {
      "disabledLabels": {
        "insufficientLiquidity": "Insufficient liquidity for this swap",
        "insufficientUserBalance": "Insufficient {{tokenSymbol}} balance",
        "invalidFromTokenAmount": "Enter a valid amount to swap",
        "priceImpactHigherThanMaximumTolerated": "Price impact too high",
        "processing": "Processing",
        "spendingLimitTooLow": "Spending limit too low",
        "unwrappingUnsupported": "Unwrapping unsupported",
        "wrappingUnsupported": "Wrapping unsupported"
      },
      "enabledLabels": {
        "swap": "Swap",
        "swapWithHighPriceImpact": "Swap with high price impact"
      }
    },
    "toTokenAmountField": {
      "label": "To"
    },
    "walletBalance": "Wallet balance"
  },
  "table": {
    "cardsSelect": {
      "label": "Sort by"
    }
  },
  "transactionErrors": {
    "acceptAdminPendingAdminCheck": "Accept Admin Pending Admin Check",
    "acceptPendingImplementationAddressCheck": "Accept Pending Implementation Address Check",
    "accrueInterestAccumulatedInterestCalculationFailed": "Accrue Interest Accumulated Interest Calculation Failed",
    "accrueInterestBorrowRateCalculationFailed": "Accrue Interest Borrow Rate Calculation Failed",
    "accrueInterestNewBorrowIndexCalculationFailed": "Accrue Interest New Borrow Index Calculation Failed",
    "accrueInterestNewTotalBorrowsCalculationFailed": "Accrue Interest New Total Borrows Calculation Failed",
    "accrueInterestNewTotalReservesCalculationFailed": "Accrue Interest New Total Reserves Calculation Failed",
    "accrueInterestSimpleInterestFactorCalculationFailed": "Accrue Interest Simple Interest Factor Calculation Failed",
    "addReservesAccrueInterestFailed": "Add Reserves Accrue Interest Failed",
    "addReservesFreshCheck": "Add Reserves Fresh Check",
    "addReservesTransferInNotPossible": "Add Reserves Transfer In Not Possible",
    "badInput": "Bad Input",
    "borrowAccrueInterestFailed": "Borrow Accrue Interest Failed",
    "borrowAccumulatedBalanceCalculationFailed": "Borrow Accumulated Balance Calculation Failed",
    "borrowCashNotAvailable": "Borrow Cash Not Available",
    "borrowComptrollerRejection": "Borrow Comptroller Rejection",
    "borrowFreshnessCheck": "Borrow Freshness Check",
    "borrowMarketNotListed": "Borrow Market Not Listed",
    "borrowNewAccountBorrowBalanceCalculationFailed": "Borrow New Account Borrow Balance Calculation Failed",
    "borrowNewTotalBalanceCalculationFailed": "Borrow New Total Balance Calculation Failed",
    "comptrollerCalculationError": "Comptroller Calculation Error",
    "comptrollerMismatch": "Comptroller Mismatch",
    "comptrollerRejection": "Comptroller Rejection",
    "exitMarketBalanceOwed": "Exit Market Balance Owed",
    "exitMarketRejection": "Exit Market Rejection",
    "insufficientBalanceForVai": "Insufficient Balance For Vai",
    "insufficientLiquidity": "Insufficient Liquidity",
    "insufficientShortfall": "Insufficient Shortfall",
    "interestRateModelError": "Interest Rate Model Error",
    "invalidAccountPair": "Invalid Account Pair",
    "invalidCloseAmountRequested": "Invalid Close Amount Requested",
    "invalidCloseFactor": "Invalid Close Factor",
    "invalidCollateralFactor": "Invalid Collateral Factor",
    "invalidLiquidationIncentive": "Invalid Liquidation Incentive",
    "liquidateAccrueBorrowInterestFailed": "Liquidate Accrue BorrowInterest Failed",
    "liquidateAccrueCollateralInterestFailed": "Liquidate Accrue Collateral Interest Failed",
    "liquidateCloseAmountIsUintMax": "Liquidate Close Amount Is UINT Max",
    "liquidateCloseAmountIsZero": "Liquidate Close Amount Is Zero",
    "liquidateCollateralFreshnessCheck": "Liquidate Collateral Freshness Check",
    "liquidateComptrollerCalculateAmountSeizeFailed": "Liquidate Comptroller Calculate Amount Seize Failed",
    "liquidateComptrollerRejection": "Liquidate Comptroller Rejection",
    "liquidateFreshnessCheck": "Liquidate Freshness Check",
    "liquidateSeizeBalanceDecrementFailed": "Liquidate Seize Balance Decrement Failed",
    "liquidateSeizeBalanceIncrementFailed": "Liquidate Seize Balance Increment Failed",
    "liquidateSeizeBorrowFreshFailed": "Liquidate Seize Borrow Fresh Failed",
    "liquidateSeizeComptrollerRejection": "Liquidate Seize Comptroller Rejection",
    "liquidateSeizeIsBorrower": "LiquidateSeizeIsBorrower",
    "liquidateSeizeLiquidatorIsBorrower": "LiquidateSeizeLiquidatorIsBorrower",
    "liquidateSeizeTooMuch": "Liquidate Seize Too Much",
    "marketAlreadyListed": "Market Already Listed",
    "marketNotEntered": "Market Not Entered",
    "marketNotFresh": "Market Not Fresh",
    "marketNotListed": "Market Not Listed",
    "mathError": "Math Error",
    "mintAccrueInterestFailed": "Mint Accrue Interest Failed",
    "mintComptrollerRejection": "Mint Comptroller Rejection",
    "mintExchangeRateReadFailed": "Mint Exchange Rate Read Failed",
    "mintFeeCalculationFailed": "Mint Fee Calculation Failed",
    "mintFreshnessCheck": "Mint Freshness Check",
    "mintNewAccountBalanceCalculationFailed": "Mint New Account Balance Calculation Failed",
    "mintNewTotalSupplyCalculationFailed": "Mint New Total Supply Calculation Failed",
    "mintTransferInFailed": "Mint Transfer In Failed",
    "mintTransferNotPossible": "Mint Transfer Not Possible",
    "noError": "No Error",
    "nonzeroBorrowBalance": "Nonzero Borrow Balance",
    "priceError": "Price Error",
    "redeemAccrueInterestFailed": "Redeem Accrue Interest Failed",
    "redeemComptrollerRejection": "Redeem Comptroller Rejection",
    "redeemExchangeAmountCalculatioFailed": "Redeem Exchange Amount Calculatio Failed",
    "redeemExchangeRateReadFailed": "Redeem Exchange Rate Read Failed",
    "redeemExchangeTokensCalculationFailed": "Redeem Exchange Tokens Calculation Failed",
    "redeemFeeCalculationFailed": "Redeem Fee Calculation Failed",
    "redeemFreshnessCheck": "Redeem Freshness Check",
    "redeemNewAccountBalanceCalculationFailed": "Redeem New Account Balance Calculation Failed",
    "redeemNewTotalSupplyCalculationFailed": "Redeem New Total Supply Calculation Failed",
    "redeemTransferOutNotPossible": "Redeem Transfer Out Not Possible",
    "reduceReservesAccrueInterestFailed": "Reduce Reserves Accrue Interest Failed",
    "reduceReservesAdminCheck": "Reduce Reserves Admin Check",
    "reduceReservesCashNotAvailable": "Reduce Reserves Cash Not Available",
    "reduceReservesFreshCheck": "Reduce Reserves Fresh Check",
    "reduceReservesValidation": "Reduce Reserves Validation",
    "rejection": "Rejection",
    "repayBehalfAccrueInterestFailed": "repay Behalf Accrue Interest Failed",
    "repayBorrowAccrueInterestFailed": "repay Borrow Accrue Interest Failed",
    "repayBorrowAccumulatedBalanceCalculationFailed": "Repay Borrow Accumulated Balance Calculation Failed",
    "repayBorrowComptrollerRejection": "Repay Borrow Comptroller Rejection",
    "repayBorrowFreshnessCheck": "Repay Borrow Freshness Check",
    "repayBorrowNewAccountBorrowBalanceCalculationFailed": "Repay Borrow New Account Borrow Balance Calculation Failed",
    "repayBorrowTransferInNotPossible": "Repay Borrow Transfer In Not Possible",
    "repayBorrowTransferNotPossible": "Repay Borrow Transfer Not Possible",
    "repayVaiComptrollerRejection": "repay VAI Comptroller Rejection",
    "repayVaiFreshnessCheck": "Repay VAI Freshness Check",
    "setCloseFactorOwnerCheck": "Set Close Factor Owner Check",
    "setCloseFactorValidation": "Set Close Factor Validation",
    "setCollateralFactorNoExists": "Set Collateral Factor No Exists",
    "setCollateralFactorOwnerCheck": "Set Collateral Factor Owner Check",
    "setCollateralFactorValidation": "Set Collateral Factor Validation",
    "setCollateralFactorWithoutPrice": "Set Collateral Factor Without Price",
    "setComptrollerOwnerCheck": "Set Comptroller Owner Check",
    "setImplementationOwnerCheck": "Set Implementation Owner Check",
    "setInterestRateModelAccrueInterestFailed": "Set Interest Rate Model Accrue Interest Failed",
    "setInterestRateModelFreshCheck": "Set Interest Rate Model Fresh Check",
    "setInterestRateModelOwnerCheck": "Set Interest Rate Model Owner Check",
    "setLiquidationIncentiveOwnerCheck": "Set Liquidation Incentive Owner Check",
    "setLiquidationIncentiveValidation": "Set Liquidation Incentive Validation",
    "setMaxAssetsOwnerCheck": "Set Max Assets Owner Check",
    "setMintedVaiRejection": "Set Minted VAI Rejection",
    "setOracleMarketNotListed": "Set Oracle Market Not Listed",
    "setPauseGuardianOwnerCheck": "Set Pause Guardian Owner Check",
    "setPendingAdminOwnerCheck": "Set Pending Admin Owner Check",
    "setPendingImplementationOwnerCheck": "Set Pending Implementation Owner Check",
    "setPriceOracleOwnerCheck": "Set Price Oracle Owner Check",
    "setReserveFactorAccrueInterestFailed": "Set Reserve Factor Accrue Interest Failed",
    "setReserveFactorAdminCheck": "Set Reserve Factor Admin Check",
    "setReserveFactorBoundsCheck": "Set Reserve Factor Bounds Check",
    "setReserveFactorFreshCheck": "Set Reserve Factor Fresh Check",
    "setTreasuryOwnerCheck": "Set Treasury Owner Check",
    "setVaiControllerOwnerCheck": "Set VAI Controller Owner Check",
    "setVaiMintRateCheck": "Set VAI Mint Rate Check",
    "sftMintNewAccountBalanceCalculationFailed": "SFT Mint New Account Balance Calculation Failed",
    "snapshotError": "Snapshot Error",
    "supportMarketExists": "Support Market Exists",
    "supportMarketOwnerCheck": "Support Market Owner Check",
    "tokenGetUnderlyingPriceError": "Token Get Underlying Price Error",
    "tokenInsufficentCash": "tokenInsufficent Cash",
    "tokenInsufficientAllowance": "Token Insufficient Allowance",
    "tokenInsufficientBalance": "Token Insufficient Balance",
    "tokenPriceError": "Token Price Error",
    "tokenTransferInFailed": "Token Transfer In Failed",
    "tokenTransferOutFailed": "Token Transfer Out Failed",
    "tooManyAssets": "Too Many Assets",
    "tooMuchRepay": "Too Much Repay",
    "transferComptrollerRejection": "Transfer Comptroller Rejection",
    "transferNotAllowed": "Transfer Not Allowed",
    "transferNotEnough": "Transfer Not Enough",
    "transferTooMuch": "Transfer Too Much",
    "unauthorized": "Unauthorized",
    "vaiBurnRejection": "VAI Burn Rejection",
    "vaiLiquidateAccrueBorrowInterestFailed": "VAI Liquidate Accrue Borrow Interest Failed",
    "vaiLiquidateAccrueCollateralInterestFailed": "VAI Liquidate Accrue Collateral Interest Failed",
    "vaiLiquidateCloseAmountIsUintMax": "VAI Liquidate Close Amount Is UINT Max",
    "vaiLiquidateCloseAmountIsZero": "VAI Liquidate Close Amount Is Zero",
    "vaiLiquidateCollateralFreshnessCheck": "VAI Liquidate Collateral Freshness Check",
    "vaiLiquidateComptrollerCalculateAmountSeizeFailed": "VAI Liquidate Comptroller Calculate Amount Seize Failed",
    "vaiLiquidateComptrollerRejection": "VAI Liquidate Comptroller Rejection",
    "vaiLiquidateFreshnessCheck": "VAI Liquidate Freshness Check",
    "vaiLiquidateLiquidatorIsBorrower": "VAI LiquidateLiquidatorIsBorrower",
    "vaiLiquidateRepayBorrowFreshFailed": "VAI Liquidate Repay Borrow Fresh Failed",
    "vaiLiquidateSeizeBalanceDecrementFailed": "VAI Liquidate Seize Balance Decrement Failed",
    "vaiLiquidateSeizeBalanceIncrementFailed": "VAI Liquidate Seize Balance Increment Failed",
    "vaiLiquidateSeizeComptrollerRejection": "VAI Liquidate Seize Comptroller Rejection",
    "vaiLiquidateSeizeLiquidatorIsBorrower": "VAI Liquidate Seize Liquidator Is Borrower",
    "vaiLiquidateSeizeTooMuch": "VAI Liquidate Seize Too Much",
    "vaiMintExchangeCalculationFailed": "VAI Mint Exchange Calculation Failed",
    "vaiMintRejection": "VAI Mint Rejected"
  },
  "transactionNotification": {
    "couldNotFetchReceipt": {
      "title": "Could not fetch transaction status"
    },
    "failed": {
      "title": "Transaction failed"
    },
    "pending": {
      "title": "Confirming transaction"
    },
    "success": {
      "title": "Transaction confirmed"
    }
  },
  "vai": {
    "borrow": {
      "amountTokensInput": {
        "limitButtonLabel": "80% LIMIT"
      },
      "borrowableAmount": {
        "label": "Borrowable amount",
        "tooltip": "The maximum amount of VAI you can borrow, based on the global limits and your collateral supplied to the Core pool"
      },
      "borrowApr": {
        "label": "Borrow APR",
        "tooltip": "The annualized interest rate to be paid in the future, on top of the minted VAI"
      },
      "fee": {
        "label": "Fee"
      },
      "notice": {
        "amountHigherThanAccountMintableAmount": "Amount entered higher than borrowable amount",
        "amountHigherThanLiquidity": "Amount entered higher than available VAI liquidity",
        "riskOfLiquidation": "You entered a high value. There is a risk of liquidation."
      },
      "primeOnlyWarning": "Only users who hold a Prime token can borrow VAI. Learn more about Prime <Link>here</Link>.",
      "submitButton": {
        "borrowAtHighRiskLabel": "Borrow at high risk",
        "borrowLabel": "Borrow",
        "enterValidAmountLabel": "Enter a valid amount to borrow"
      },
      "tabTitle": "Borrow"
    },
    "headerMessage": "VAI is the primary stablecoin of the Venus Protocol. Borrow VAI using your collateral supplied to the Core pool. <Link>Learn more</Link>",
    "repay": {
      "amountTokensInput": {
        "limitButtonLabel": "MAX"
      },
      "borrowApr": {
        "label": "Borrow APR",
        "tooltip": "The annualized interest rate to be paid in the future, on top of the minted VAI"
      },
      "notice": {
        "amountHigherThanBorrowBalance": "Amount entered higher than repay balance",
        "amountHigherThanWalletBalance": "Insufficient {{tokenSymbol}} balance",
        "amountHigherThanWalletSpendingLimit": "You entered an amount that exceeds your spending limit for this asset. Please revoke your spending limit then set a new one in order to proceed with this transaction.",
        "fullRepaymentWarning": "The transaction value might be slightly higher than the current borrow amount to cover any newly-accumulated interests"
      },
      "submitButton": {
        "enterValidAmountLabel": "Enter a valid amount to repay",
        "repayLabel": "Repay"
      },
      "tabTitle": "Repay",
      "walletBalance": {
        "label": "Wallet balance"
      }
    }
  },
  "vault": {
    "transactionForm": {
      "lockingPeriod": {
        "duration": "{{date, distanceToNow}}",
        "label": "Locking period"
      },
      "rightMaxButtonLabel": "MAX"
    }
  },
  "vaultItem": {
    "blockingPendingWithdrawalsWarning": "You must complete pending withdrawals to interact with this vault.",
    "dailyEmission": "Daily Emission",
    "pausedWarning": "This vault is currently paused. Interest rates are still accruing but claiming, staking, and withdrawing are disabled until the vault is unpaused",
    "stakeButton": "Stake",
    "stakingApr": "{{stakeTokenName}} Stake APR",
    "totalStaked": "Total Staked",
    "withdrawButton": "Withdraw",
    "youAreStake": "You are staking"
  },
  "vote": {
    "abstain": "Abstain",
    "addComment": "Add comment",
    "against": "Against",
    "comment": "Comment",
    "createProposalForm": {
      "abstainOption": "Abstain option",
      "action": "Action",
      "actions": "Actions",
      "addDescription": "Add description (basic styling with Markdown is supported)",
      "addOneMoreAction": "+ Add one more action",
      "address": "Address",
      "againstOption": "Against option",
      "confirm": "Confirm",
      "create": "Create",
      "description": "Description",
      "forOption": "For option",
      "name": "Name",
      "nextStep": "Next step",
      "proposalName": "Proposal name",
      "proposalType": "Proposal type",
      "signature": "Signature",
      "submitError": "There was an error creating your proposal",
      "votingOptions": "Voting options"
    },
    "createProposalModal": {
      "createManually": "Create manually",
      "createProposal": "Create Proposal",
      "uploadFile": "Upload file",
      "youCanEitherCreateManuallyOrUpload": "You can either create a proposal manually or upload a file containing its details. If you choose to upload a file, you can use this template as an example: <Link>Github</Link>"
    },
    "createProposalPlus": "+ Create proposal",
    "delegate": "Delegate",
    "delegateAddress": "Delegate address",
    "delegateLeaderboard": "Delegate leaderboard",
    "delegateVotes": "Delegate votes",
    "delegateVoting": "Delegate voting",
    "delegateYourVoting": "2. <Anchor>Delegate your voting power</Anchor> to yourself or somebody else",
    "depositXvs": "Deposit XVS",
    "depositYourTokens": "1. <Link>Deposit your tokens</Link> in the XVS Vault ",
    "enterContactAddress": "Enter contact address",
    "errorState": {
      "buttonLabel": "Retry",
      "message": "Proposals failed to fetch"
    },
    "for": "For",
    "goToXvsSnapshot": "Go to XVS Snapshot",
    "multichain": {
      "switchToBnb": "Switch to BNB chain",
      "votingOnlyEnabledOnBnb": "Voting is only available on the BNB chain"
    },
    "pages": {
      "actions": "3 of 3 Actions",
      "confirmation": "Confirmation",
      "proposalInformation": "1 of 3 Proposal information",
      "votingOptions": "2 of 3 Voting options"
    },
    "pasteYourAddress": "Paste your address",
    "pleasePayAttention": "Please pay attention",
    "proposals": "Proposals",
    "proposalStateFilter": {
      "label": "State"
    },
    "proposalType": {
      "critical": "Critical",
      "fastTrack": "Fast track",
      "normal": "Normal"
    },
    "redelegate": "Redelegate",
    "redelegateVoting": "Redelegate voting",
    "requiredVotingPower": "You need to have 300k voting power to create a proposal",
    "searchInput": {
      "placeholder": "Search proposal"
    },
    "summaryProgressBar": "Vote Summary Progress Bar - {{voteType}}",
    "totalLocked": "Total locked",
    "toVoteYouShould": "To vote you should:",
    "voteAbstain": "Vote abstain",
    "voteAgainst": "Vote against",
    "voteFor": "Vote for",
    "votingPower": "Voting power",
    "votingWallet": "Voting wallet",
    "votingWeight": "Voting weight",
    "youCanDelegateVotes": "You can delegate votes to yourself or somebody else. If you know the address you wish to delegate to, enter it below. If not, you can view the Delegate Leaderboard to find a political party you wish to support",
    "youDelegatedTo": "You delegated your locked tokens to {{delegate}}"
  },
  "voteProposalUi": {
    "activeUntilDate": "Active until: <Date>{{ date, dd MMM yyyy h:mm a }}</Date>",
    "cancelButtonLabel": "Cancel",
    "cancelledDate": "Cancelled: <Date>{{ date, dd MMM yyyy h:mm a }}</Date>",
    "countdownFormat": {
      "daysIncluded": "{{days}}d {{hours}}h : {{minutes}}m : {{seconds}}s",
      "hoursIncluded": "{{hours}}h : {{minutes}}m : {{seconds}}s",
      "minutesIncluded": "{{minutes}}m : {{seconds}}s",
      "secondsIncluded": "{{seconds}}s"
    },
    "defeatedDate": "Defeated: <Date>{{ date, dd MMM yyyy h:mm a }}</Date>",
    "description": "Description",
    "executeButtonLabel": "Execute",
    "executedDate": "Executed: <Date>{{ date, dd MMM yyyy h:mm a }}</Date>",
    "greenPulseAnimation": {
      "altText": "Green pulse animation"
    },
    "operation": "Operation",
    "proposalHistory": "Proposal History",
    "proposalState": {
      "activeTimestamp": "Active since: <Span>{{date, dd MMM yyyy HH:mm}}</Span>",
      "canceledTimestamp": "Canceled: <Span>{{date, dd MMM yyyy HH:mm}}</Span>",
      "defeatedTimestamp": "Defeated: <Span>{{date, dd MMM yyyy HH:mm}}</Span>",
      "executedTimestamp": "Executed: <Span>{{date, dd MMM yyyy HH:mm}}</Span>",
      "expiredTimestamp": "Expired: <Span>{{date, dd MMM yyyy HH:mm}}</Span>",
      "queuedTimestamp": "Queued: <Span>{{date, dd MMM yyyy HH:mm}}</Span>",
      "succeededTimestamp": "Succeeded: <Span>{{date, dd MMM yyyy HH:mm}}</Span>"
    },
    "queueButtonLabel": "Queue",
    "queuedUntilDate": "Queued until: <Date>{{ date, dd MMM yyyy h:mm a }}</Date>",
    "statusCard": {
      "ariaLabelAbstain": "votes abstain",
      "ariaLabelAgainst": "votes against",
      "ariaLabelFor": "votes for",
      "dateOnly": "{{date, dd MMM yyyy}}",
      "timeOnly": "{{date, h:mm a}}"
    },
    "timeUntilExecutable": "Time until executable",
    "voteStatus": {
      "abstained": "Abstained",
      "notVoted": "Not voted",
      "votedAgainst": "Voted against",
      "votedFor": "Voted for"
    },
    "votingOptions": "Voting options"
  },
  "voterDetail": {
    "actions": "Actions",
    "amount": "Amount",
    "delegated": "Delegated",
    "delegatingTo": "Delegating to",
    "holding": "Holding",
    "readableSent": "{{date, distanceToNow}} ago",
    "sent": "Sent",
    "transactions": "Transactions",
    "undelegated": "Undelegated",
    "venusBalance": "Venus balance",
    "viewAll": "View all",
    "votedAbstain": "Voted abstain",
    "votedAgainst": "Voted against",
    "votedFor": "Voted for",
    "votes": "Votes",
    "votingHistory": "Voting history"
  },
  "voterLeaderboard": {
    "addressesByVotingWeight": "Addresses by Voting Weight",
    "columns": {
      "proposalsVoted": "Proposals Voted",
      "rank": "Rank",
      "votes": "Votes",
      "voteWeight": "Vote Weight"
    }
  },
  "voteSummary": {
    "addresses_zero": "{{count}} address",
    "addresses_one": "{{count}} address",
    "addresses_other": "{{count}} addresses",
    "votes": "Votes"
  },
  "wallets": {
    "binanceWallet": "Binance Wallet",
    "bitKeep": "BitKeep",
    "braveWallet": "Brave Wallet",
    "coinbaseWallet": "Coinbase Wallet",
    "errors": {
      "authorizeAccess": "You need to authorize access to your account",
      "noProvider": "If you are connecting an external wallet, make sure you have a provider such as MetaMask or compatible wallet such as Brave",
      "unsupportedWallet": "Unable to connect. Make sure your selection matches your desired wallet."
    },
    "gateWallet": "Gate Wallet",
    "infinityWallet": "Infinity Wallet",
    "ledger": "Ledger",
    "metamask": "MetaMask",
    "okxWallet": "OKX Wallet",
    "opera": "Opera Wallet",
    "rabbyWallet": "Rabby Wallet",
    "safePal": "SafePal",
    "trustWallet": "Trust Wallet",
    "walletConnect": "WalletConnect"
  },
  "withdrawFromVaiVaultModal": {
    "availableTokensLabel": "Available {{tokenSymbol}}",
    "connectWalletMessage": "Please connect your wallet to withdraw {{tokenSymbol}}",
    "submitButtonDisabledLabel": "Enter a valid amount to withdraw",
    "submitButtonLabel": "Withdraw",
    "title": "Withdraw {{tokenSymbol}}"
  },
  "withdrawFromVestingVaultModalModal": {
    "displayWithdrawalRequestListButton": "Withdrawal request list",
    "requestWithdrawalTab": {
      "approveToken": {
        "connectWalletMessage": "Please connect your wallet to withdraw"
      },
      "availableTokensLabel": "Requestable {{tokenSymbol}}",
      "displayWithdrawalRequestListButton": "Withdrawal request list",
      "primeLossWarning": {
        "message": "You will lose your Prime token if you withdraw this amount, as your stake in the XVS vault will go below the minimum required of {{minimumXvsStake}} to be eligible for Prime.",
        "submitButtonLabel": "Lose Prime token and request withdrawal"
      },
      "submitButtonDisabledLabel": "Enter a valid amount to request",
      "submitButtonLabel": "Request withdrawal"
    },
    "requestWithdrawalTabTitle": "Request withdrawal",
    "title": "Withdraw {{tokenSymbol}}",
    "withdrawalRequestList": {
      "approveToken": {
        "connectWalletMessage": "Please connect your wallet to see your withdrawal requests"
      },
      "emptyState": "You have no active withdrawal requests",
      "itemContent": "Locked until {{date, dd.MM.yy h:mm a}}"
    },
    "withdrawalRequestListTitle": "Withdrawal request list",
    "withdrawTab": {
      "approveToken": {
        "connectWalletMessage": "Please connect your wallet to withdraw"
      },
      "availableTokens": "Available {{tokenSymbol}}",
      "submitButton": "Withdraw"
    },
    "withdrawTabTitle": "Withdraw"
  },
  "xvs": {
    "columns": {
      "asset": "Asset",
      "borrowXvsApy": "Borrow XVS APY",
      "supplyXvsApy": "Supply XVS APY",
      "xvsPerDay": "XVS Per Day"
    },
    "dailyDistribution": "Daily Distribution:",
    "progressBar": "Xvs Distribution progress",
    "remaining": "Remaining:"
  },
  "xvsPage": {
    "assetWarningsWarning": "Isolated assets are not included on this page"
  }
}
