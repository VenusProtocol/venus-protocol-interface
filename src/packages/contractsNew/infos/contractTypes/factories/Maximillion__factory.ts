/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider } from '@ethersproject/providers';
import { Contract, Signer, utils } from 'ethers';

import type { Maximillion, MaximillionInterface } from '../Maximillion';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract VBNB',
        name: 'vBnb_',
        type: 'address',
      },
    ],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    constant: false,
    inputs: [
      {
        internalType: 'address',
        name: 'borrower',
        type: 'address',
      },
    ],
    name: 'repayBehalf',
    outputs: [],
    payable: true,
    stateMutability: 'payable',
    type: 'function',
  },
  {
    constant: false,
    inputs: [
      {
        internalType: 'address',
        name: 'borrower',
        type: 'address',
      },
      {
        internalType: 'contract VBNB',
        name: 'vBnb_',
        type: 'address',
      },
    ],
    name: 'repayBehalfExplicit',
    outputs: [],
    payable: true,
    stateMutability: 'payable',
    type: 'function',
  },
  {
    constant: true,
    inputs: [],
    name: 'vBnb',
    outputs: [
      {
        internalType: 'contract VBNB',
        name: '',
        type: 'address',
      },
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
] as const;

export class Maximillion__factory {
  static readonly abi = _abi;
  static createInterface(): MaximillionInterface {
    return new utils.Interface(_abi) as MaximillionInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Maximillion {
    return new Contract(address, _abi, signerOrProvider) as Maximillion;
  }
}
