/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider } from '@ethersproject/providers';
import { Contract, Signer, utils } from 'ethers';

import type { JumpRateModel, JumpRateModelInterface } from '../JumpRateModel';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'baseRatePerYear',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'multiplierPerYear',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'jumpMultiplierPerYear',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'kink_',
        type: 'uint256',
      },
    ],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'baseRatePerBlock',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'multiplierPerBlock',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'jumpMultiplierPerBlock',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'kink',
        type: 'uint256',
      },
    ],
    name: 'NewInterestParams',
    type: 'event',
  },
  {
    constant: true,
    inputs: [],
    name: 'baseRatePerBlock',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: true,
    inputs: [],
    name: 'blocksPerYear',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: true,
    inputs: [
      {
        internalType: 'uint256',
        name: 'cash',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'borrows',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'reserves',
        type: 'uint256',
      },
    ],
    name: 'getBorrowRate',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: true,
    inputs: [
      {
        internalType: 'uint256',
        name: 'cash',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'borrows',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'reserves',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'reserveFactorMantissa',
        type: 'uint256',
      },
    ],
    name: 'getSupplyRate',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: true,
    inputs: [],
    name: 'isInterestRateModel',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: true,
    inputs: [],
    name: 'jumpMultiplierPerBlock',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: true,
    inputs: [],
    name: 'kink',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: true,
    inputs: [],
    name: 'multiplierPerBlock',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: true,
    inputs: [
      {
        internalType: 'uint256',
        name: 'cash',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'borrows',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'reserves',
        type: 'uint256',
      },
    ],
    name: 'utilizationRate',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    payable: false,
    stateMutability: 'pure',
    type: 'function',
  },
] as const;

export class JumpRateModel__factory {
  static readonly abi = _abi;
  static createInterface(): JumpRateModelInterface {
    return new utils.Interface(_abi) as JumpRateModelInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): JumpRateModel {
    return new Contract(address, _abi, signerOrProvider) as JumpRateModel;
  }
}
